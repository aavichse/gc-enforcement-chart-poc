name: Upload helm chart

on:
  workflow_dispatch:
  push:
    paths:
      - 'v49/*'
      - 'v50/*'
      - 'v51/*'

jobs:
  build:
    name: Package & upload charts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Package and push helm charts
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          set -x
          changed=$(echo $ALL_CHANGED_FILES | tr ' ' '\n')
          changed_values=$(echo "$changed" | grep "values.yaml")
          changed_charts=$(echo "$changed" | grep "templates" | cut -d '/' -f1 | sort | uniq)

          for item in ${changed_values}; do
            chart=$(echo $item | cut -d '/' -f1)
            old_chart_version=$(yq '.version' $chart/Chart.yaml)
            new_version=$(echo $old_chart_version |  awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
            yq -i '.version = "$new_version"' $chart/Chart.yaml
            image_tag=$(yq .image.tag $item)
            yq -i '.appVersion = "$image_tag"' $chart/Chart.yaml

            if [ -z $(echo "$changed_charts" | grep $chart) ]; then
              helm package $chart
            fi
          done

          for item in ${changed_charts}; do
            old_chart_version=$(yq '.version' $item/Chart.yaml)
            new_chart_version=$(echo $old_chart_version |  awk -F. '/[0-9]+\./{$(NF-1)++;print}' OFS=.)
            yq -i '.version = "$new_chart_version"' $chart/Chart.yaml
            helm package $chart
          done
          helm repo index --merge index.yaml
          git config --global user.name 'github actions'
          git config --global user.email 'gha@users.noreply.github.com'
          git commit -am "Updated charts appversion & versoin"
          git push
